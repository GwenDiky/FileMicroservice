services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "filestorage"
    volumes:
      - .:/src
    ports:
      - "8085:8085"
    env_file:
      - .env
    environment:
      - PYTHONBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONPATH=/app
    depends_on:
      - minio
      - kafka
    networks:
      - shared_network

  minio:
    container_name: minio
    image: minio/minio
    restart: always
    command: server --address 0.0.0.0:9000 /data
    ports:
      - "9000:9000"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    env_file:
      - .env

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2183:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - shared_network

  kafka:
    image: 'bitnami/kafka:3.3.2-debian-11-r183'
    ports:
      - "9096:9092"
      - "29096:29092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ADVERTISED_HOST=localhost
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --list" ]
      interval: 5s
      retries: 10
    depends_on:
      - zookeeper
    networks:
      - shared_network
    env_file:
      - .env


volumes:
  postgres-data:
  redis-data:
  localstack-data:

networks:
  shared_network:
    external: true
